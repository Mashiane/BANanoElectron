AppType=JavaFX
Build1=Default,b4j.example
Group=Default Group
Library1=jcore
Library2=jfx
Library3=banano
Library4=bananoelectron
Module1=|relative|..\..\..\shared\BANanoShared
NumberOfFiles=0
NumberOfLibraries=4
NumberOfModules=1
Version=8.5
@EndOfDesignText@
#Region Project Attributes 
	
#End Region

Sub Process_Globals
	Public BANano As BANano 'ignore
End Sub

Sub AppStart (Form1 As Form, Args() As String)
	Dim AppName As String = "BanELDemo"
	Dim AppTitle As String = "BanELDemo"
	Dim ServerIP As String = "localhost"
	Dim Version As String = "1.0.0"
	Dim Port As String = "8080"
	Dim Publish As String = "C:/laragon/www"
	Dim WorkingFolder As String = $"${Publish}/${AppName}"$
	
	'initialize banano for first use
	BANano.Initialize("BANano", AppName, DateTime.now)
	BANano.HTML_NAME = "index.html"
	BANano.Header.Title = AppTitle
	'BANano.Header.AddFavicon("favicon-16x16.png", "16x16")
	'BANano.Header.AddAppleTouchIcon("apple-touch-icon.png", "180x180")
	'BANano.Header.AddMSTileIcon("mstile-150x150.png", "144x144")
	'BANano.Header.SetMaskIcon("safari-pinned-tab.svg")
	'BANano.Header.AddManifestIcon("android-chrome-192x192.png", "192x192")
	'BANano.Header.AddManifestIcon("android-chrome-512x512.png", "512x512")
	BANano.TranspilerOptions.UseServiceWorker = False
	BANano.TranspilerOptions.MergeAllCSSFiles = False
	BANano.TranspilerOptions.MergeAllJavascriptFiles = False
	BANano.TranspilerOptions.MinifyOnline = False
	BANano.TranspilerOptions.IgnoreB4JLibrary("bananoelectron")
	#if release
	BANano.TranspilerOptions.EnableLiveCodeSwapping = False
	#end if
	'BANano.TranspilerOptions.RedirectOutput(File.DirApp, "log.txt")
	BANano.TranspilerOptions.EnableLiveCodeSwapping = False
	
	BANano.Header.AddCSSFile("https://fonts.googleapis.com/css?family=Roboto:300")
	
	'set php settings
	BANano.PHP_NAME = $"${AppName}.php"$
	BANano.PHPHost = $"http://${ServerIP}:${Port}/${AppName}/"$
	BANano.PHPAddHeader("Access-Control-Allow-Origin: *")
	BANano.Build(Publish)
	
	'Dim fx As JFX
	'Dim URL As String = File.GetUri(File.DirApp,"log.txt")
	'fx.ShowExternalDocument(URL)
	'
	Dim AppJs As String = $"'use strict';
const electron = require('electron');
const app = electron.app;                                               
const BrowserWindow = electron.BrowserWindow;
let mainWindow = null;

app.on('window-all-closed', () => {
  if (process.platform !== 'darwin') app.quit();
});

app.on('ready', () => {
  mainWindow = new BrowserWindow();
  mainWindow.loadURL(`file://~{__dirname}/index.html`);
  mainWindow.on('closed', () => { mainWindow = null; });
});"$
	'
	AppJs = AppJs.Replace("~","$")
	File.WriteString(WorkingFolder, "app.js", AppJs)

Dim PackageJson As String = $"{
"name": "${AppName}",
"version": "${Version}",
"productName": "${AppName}",
"description": "${AppName}",
"main": "app.js",
"scripts": {
"start": "electron app.js"
},
"author": "BANanoNinja",
"license": "MIT"
}"$

	File.WriteString(WorkingFolder, "package.json", PackageJson)
	
	'lets work with electron
	Dim electron As BANanoElectron
	electron.Initialize(Publish, AppName, "com.mashy.helloelectron", "BANano Electron")
	Log("=======================================")
	Log(">> Checking if Electron is already installed...")
	Dim rs As ResumableSub = electron.isInstalled
	Wait For (rs) Complete(Result As Boolean)
	If Not(Result) Then
		Log(">> Electron is not yet installed. Installing...")
		Dim rs As ResumableSub = electron.Install
		Wait For (rs) Complete(Result As Boolean)
		If Not(Result) Then ExitApplication
	Else
		Log(">> Electron is installed!")
	End If
		
	'install electron-packager globally
	'*** RUN ONCE
'	Log(">> Attempting to install electron-packager globally...")
'	Dim rs As ResumableSub = electron.InstallPackage("electron-packager")
'	Wait For (rs) Complete(Result As Boolean)
'	If Not(Result) Then
'		Log(">> Could not install electron packager...")
'		If Not(Result) Then ExitApplication
'	Else
'		Log(">> Electron packager installed...!")
'	End If
	
	
	'install package
	Log(">> Attempting to install electron-packager for app...")
	Dim rs As ResumableSub = electron.InstallDevDependency("electron-packager")
	Wait For (rs) Complete(Result As Boolean)
	If Not(Result) Then
		Log(">> Could not install electron packager locally...")
		If Not(Result) Then ExitApplication
	Else
		Log(">> Electron packager installed locally...!")
	End If
	'
	Log(">> Attempting to install electron for app...")
	Dim rs As ResumableSub = electron.InstallDevDependency("electron")
	Wait For (rs) Complete(Result As Boolean)
	If Not(Result) Then
		Log(">> Could not install electron locally...")
		If Not(Result) Then ExitApplication
	Else
		Log(">> Electron installed locally...!")
	End If
	'
	Log(">> Attempting to package the app for distribution...")
	Dim rs As ResumableSub = electron.Run("electron-packager --overwrite")
	Wait For (rs) Complete(Result As Boolean)
	If Not(Result) Then
		Log(">> Could not package the app...")
		If Not(Result) Then ExitApplication
	Else
		Log(">> App packaged successfully...!")
	End If
	
	
	Log(">> Attempting to install the application...")
	Dim rs As ResumableSub = electron.AppInstall
	Wait For (rs) Complete(Result As Boolean)
	If Not(Result) Then
		Log(">> Could not install the Electron App...")
		If Not(Result) Then ExitApplication
	Else
		Log(">> Electron App installed, check the output!")
	End If

	Log(">> Attempting to start the application...")
	Dim rs As ResumableSub = electron.AppStart
	Wait For (rs) Complete(Result As Boolean)
	If Not(Result) Then
		Log(">> Could not start the Electron App...")
		If Not(Result) Then ExitApplication
	Else
		Log(">> Electron App started, check the output!")
	End If
	
	
	
	ExitApplication
End Sub

#if css
	#btnhello {
        background: rgba(0,0,0,0.40);
        box-shadow: 0px 0px 4px 0px rgba(0,0,0,0.50);
        border-radius: 8px;
        color: white;
        padding: 1em 2em;
        border: none;
        font-family: 'Roboto', sans-serif;
        font-weight: 300;
        font-size: 14pt;
        position: relative;
        top: 40%;
        cursor: pointer;
        outline: none;
      }

      #btnhello:hover {
        background: rgba(0,0,0,0.30);
      }
#End If


Sub BANano_Ready()
	Dim body As BANanoElement = BANano.GetElement("#body")
	Dim bs As Map = CreateMap()
	bs.Put("background-image", "linear-gradient(45deg, #EAD790 0%, #EF8C53 100%)")
	bs.Put("text-align", "center")
	bs.Put("font-family", "'Roboto', sans-serif")
	body.SetStyle(BANano.ToJson(bs))
	'
	Dim h1 As BANanoElement = BANanoShared.CreateElement("body", "h1", "myh1")
	h1.SetText("Hello BANanoElectron")
	'
	Dim p1 As BANanoElement = BANanoShared.CreateElement("body", "p", "p1")
	p1.SetText("osenv home: ")
	
	Dim btn As BANanoElement = BANanoShared.CreateElement("body", "button", "btnhello") 
	btn.SetText("Say Hello")
	btn.On("click", Me, "sayhello")
	
	
End Sub

Sub sayhello
	BANano.Alert("Hello BANanoElectron!")
End Sub
